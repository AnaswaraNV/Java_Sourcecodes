package ca.myseneca.xml;
import java.io.File;
import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Result;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;

import org.w3c.dom.Document;
import org.xml.sax.SAXException;

/**
 * Copyright (c) 2006 Sun Microsystems, Inc.  All rights reserved.
 * 
 * Process an XML document using an XSLT stylesheet in Java - to genertate 
 * stylized html file or show in console
 */
public class XmlStylizer {

	// Global value so it can be ref'd by the tree-adapter
    static Document document;

    public static void main(String[] argv) {

    	if (argv.length != 3) {
            System.err.println("Usage: java XmlStylizer stylesheet xmlfile htmlfile");
            System.err.println("Usage: java XmlStylizer Cars.xsl Cars.xml Cars.html");
            System.exit(1);
        }

        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();

        //factory.setNamespaceAware(true);
        //factory.setValidating(true);
        try {
            File stylesheet = new File(argv[0]);
            File datafile = new File(argv[1]);
            File htmlfile = new File(argv[2]);

            DocumentBuilder builder = factory.newDocumentBuilder();
            document = builder.parse(datafile);

            //1. Obtain a TransformerFactory object.
            TransformerFactory tFactory = TransformerFactory.newInstance();
            
            //2. Present the stylesheet as a Source
            StreamSource stylesource = new StreamSource(stylesheet);
            
            //3. Use the factory object to obtain a Transformer object for the given stylesheet
            Transformer transformer = tFactory.newTransformer(stylesource);

            //4. Present the input document as a Source
            DOMSource source = new DOMSource(document);
            
            //5. Provide a Result object to accept the output document
            StreamResult result = new StreamResult(System.out); // to console
            Result outputResult = new StreamResult(htmlfile); // to htmlfile
            
            //6. Use the Transformer object to transform the input document
            transformer.transform(source, result);   // to console
            transformer.transform(source, outputResult); // to htmlfile
            
        } catch (TransformerConfigurationException tce) {
            // Error generated by the parser
            System.out.println("\n** Transformer Factory error");
            System.out.println("   " + tce.getMessage());

            // Use the contained exception, if any
            Throwable x = tce;

            if (tce.getException() != null) {
                x = tce.getException();
            }

            x.printStackTrace();
        } catch (TransformerException te) {
            // Error generated by the parser
            System.out.println("\n** Transformation error");
            System.out.println("   " + te.getMessage());

            // Use the contained exception, if any
            Throwable x = te;

            if (te.getException() != null) {
                x = te.getException();
            }

            x.printStackTrace();
        } catch (SAXException sxe) {
            // Error generated by this application
            // (or a parser-initialization error)
            Exception x = sxe;

            if (sxe.getException() != null) {
                x = sxe.getException();
            }

            x.printStackTrace();
        } catch (ParserConfigurationException pce) {
            // Parser with specified options can't be built
            pce.printStackTrace();
        } catch (IOException ioe) {
            // I/O error
            ioe.printStackTrace();
        }
    } // main
}

